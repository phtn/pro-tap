rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules
    match /affiliates/{doc=**} {
      allow read, write: if request.auth != null;
    }

    match /subs/{doc=**} {
    	allow read: if request.auth != null;
    }

    match /subs/{doc=**} {
    	allow write: if true;
    }

    match /logs/{doc=**} {
    	allow read: if request.auth != null;
    }

    match /logs/{doc=**} {
    	allow write: if true;
    }

    match /configs/{doc=**} {
    	allow read: if true;
    }

    // PROTAP

    function isSignedIn() {
        return request.auth != null && request.auth.uid != null;
    }

    function isSelf(uid) {
        return isSignedIn() && request.auth.uid == uid;
    }

    // Your users live at: /protap/users/users/{uid}
    match /protap/users/account/{uid} {
        // Read (get/query) only your own doc
        allow read: if isSelf(uid);

        // Create only your own doc and ensure the stored uid matches auth uid
        allow create: if isSelf(uid) &&
        request.resource.data.uid == request.auth.uid;

        // Update only your own doc and keep uid immutable
        allow update: if isSelf(uid) &&
        request.resource.data.uid == resource.data.uid;

        // Delete only your own doc
        allow delete: if isSelf(uid);
    }

    // Cards collection - requires authentication for all operations
    match /protap/cards/batch/{id} {
        // Allow authenticated users to read (checkCard) and write (createCard)
        allow read, write: if isSignedIn();
    }
  }
}
